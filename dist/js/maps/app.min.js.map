{"version":3,"sources":["app.js"],"names":["window","$","jQuery","require","fs","ipcRenderer","electron","remote","dialog","Store","store","populateFontLists","activePath","disabledPath","get","html","addItemsToList","fadeIn","updateLists","remove","prop","oldPath","newPath","list","readdir","err","files","file","item","stat","stats","code","showErrorBox","isDirectory","startsWith","append","move","count","total","callback","rename","deleteItems","updateButtonState","length","deleteSelected","fadeOut","counter","items","each","index","value","this","data","exportSelected","message","$this","push","send","updateAll","on","event","which","name","path","toggleClass","click","e","preventDefault","addClass","removeClass","showMessageBox","detail","buttons","empty","dir","Notification","body"],"mappings":"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","file":"../app.min.js","sourcesContent":["'use strict'\n\nwindow.$ = window.jQuery = require( 'jquery' )\nconst fs = require( 'fs-extra' )\nconst {ipcRenderer} = require( 'electron' )\nconst electron = require(\"electron\")\nconst remote = electron.remote\nconst dialog = remote.dialog\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\npopulateFontLists()\n\n\n\n//note(@duncanmid): populate font lists\n\nfunction populateFontLists() {\n\t\n\tlet {activePath, disabledPath} = store.get('fontDirectories')\n\t\n\t\t$('#active-menu').html(activePath)\n\t\t$('#disabled-menu').html(disabledPath)\n\t\n\taddItemsToList(\tactivePath, disabledPath, 'active' )\n\taddItemsToList( disabledPath, activePath, 'disabled' )\n\t\n\t$('.left-panel ul, .right-panel ul').fadeIn('fast')\n}\n\n\n\n//note(@duncanmid): update lists\n\nfunction updateLists() {\n\n\t$('#active-list li, #disabled-list li').remove()\n\t$('#update-all').prop('disabled', true)\n\t\n\tpopulateFontLists()\n}\n\n\n\n//note(@duncanmid): add items to lists\n\nfunction addItemsToList( oldPath, newPath, list) {\n\t\n\tfs.readdir( oldPath, ( err, files ) => {\n\n\t\tif ( err ) throw  err\n\n\t\tfor ( let file of files ) {\n\t\t\t\n\t\t\tvar item\n\t\t\t\n\t\t\tfs.stat( oldPath + file,( err,stats ) => {\n\t\t\t\t\n\t\t\t\tif( err ) {\n\n\t\t\t\t\tif( err.code ) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t\t\t'An error occured whilst updating the font lists', err.code\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( stats.isDirectory() ) {\n\t\t\t\t\t\n\t\t\t\t\titem = 'folder'\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\titem = 'file'\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !file.startsWith('.') ) {\n\t\t\t\t\t\t\n\t\t\t\t\t$(`#${list}-list`).append(`<li class=\"${item}\" data-name=\"${file}\" data-oldpath=\"${oldPath}${file}\" data-newpath=\"${newPath}${file}\" data-type=\"${item}\" title=\"${file}\"><div>${file}</div></li>`)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n\n\n\n//note(@duncanmid): move selected files or folders\n\nfunction move( oldPath, newPath, count, total, callback ) {\n\t\n\tfs.rename(oldPath, newPath, function (err) {\n\t\t\n\t\tif (err) {\n\t\t\t\n\t\t\tswitch( err.code ) {\n\t\t\t\t\n\t\t\t\tcase 'ENOTEMPTY':\n\t\t\t\t\t\n\t\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t\t'An error occured whilst moving the fonts',\n\t\t\t\t\t\t'Some items could not be moved - you may have duplicate items in your Active and Disabled folders.'\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'ENOENT':\n\t\t\t\t\t\n\t\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t\t'An error occured whilst moving the fonts',\n\t\t\t\t\t\t'Make sure the paths for the Active and Disabled directories are correctly set. If you don\\'t have a \"Fonts Disabled\" folder in your home Library, you may need to create one.'\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tdefault:\n\t\t\t\t\n\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t'An error occured whilst moving the fonts', err.code\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( (count + 1) === total ) {\n\t\t\n\t\t\tcallback()\n\t\t}\n\t})\n}\n\n\n\n//note(@duncanmid): delete items\n\nfunction deleteItems( oldPath, count, total, callback ) {\n\t\n\tfs.remove(oldPath, function (err) {\n\t\t\n\t\tif (err) {\n\t\t\t\n\t\t\tif (err.code) {\n\t\t\t\t\n\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t'An error occured whilst deleting the fonts', err.code\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\tif( (count + 1) === total ) {\n\t\t\t\n\t\t\tcallback()\n\t\t}\n\t})\n}\n\n\n\n//note(@duncanmid): update fonts button state\n\nfunction updateButtonState() {\n\n\tif( $('#active-list li.selected, #disabled-list li.selected').length > 0 ) {\n\t\t\n\t\t$('#update-all').prop('disabled', false)\n\t\n\t} else {\n\t\t\n\t\t$('#update-all').prop('disabled', true)\n\t}\n}\n\n\n\n//note(@duncanmid): on click list item\n\n$('body').on('mouseup', '#active-list li, #disabled-list li', function(event) {\n\t\n\tif( event.which === 3 ) {\n\n\t\t\n\t\tvar name = $(this).data('name'),\n\t\t\tpath = $(this).data('oldpath')\n\t\t\n\t\tipcRenderer.send('show-font-menu', [name, path] )\n\t\t\n\t} else {\n\t\t\t\n\t\t$(this).toggleClass('selected')\n\t\tupdateButtonState()\n\t}\n})\n\n\n\n//note(@duncanmid): delete selected\n\nfunction deleteSelected() {\n\t\n\t$('.left-panel ul, .right-panel ul').fadeOut('fast')\n\t\n\tvar counter = 0,\n\t\titems = $('#active-list li.selected, #disabled-list li.selected')\n\t\n\titems.each(function (index, value) {\n\t\t\n\t\tvar oldPath = $(this).data('oldpath')\n\t\t\n\t\tdeleteItems( oldPath, counter++, items.length, updateLists )\n\t})\n}\n\n\n\n//note(@duncanmid): export selected\n\nfunction exportSelected() {\n\t\n\tvar selected = $('#active-list li.selected, #disabled-list li.selected'),\n\t\tmessage = []\n\t\n\tselected.each( function() {\n\t\t\n\t\tvar $this = $(this)\n\t\tmessage.push( [ $this.data('name') ,$this.data('oldpath') ] )\n\t})\n\t\n\tipcRenderer.send('export-list', message)\n}\n\n\n\n//note(@duncanmid): update all\n\nfunction updateAll() {\n\t\n\t$('.left-panel ul, .right-panel ul').fadeOut('fast')\n\t\n\tvar counter = 0,\n\t\titems = $('#active-list li.selected, #disabled-list li.selected')\n\t\n\titems.each(function (index, value) {\n\t\t\n\t\tvar oldPath = $(this).data('oldpath'),\n\t\t\tnewPath = $(this).data('newpath')\n\t\t\n\t\tmove( oldPath, newPath, counter++, items.length, updateLists )\n\t})\n}\n\n\n$('#update-all').click( () => {\n\t\n\tupdateAll()\n})\n\n\n\n//note(@duncanmid): open font folder menus\n\n$('#active-menu').click( (e) => {\n\t\n\te.preventDefault()\n\tipcRenderer.send('show-folder-menu', 'active')\n})\n\n$('#disabled-menu').click( (e) => {\n\t\n\te.preventDefault()\n\tipcRenderer.send('show-folder-menu', 'disabled')\n})\n\n\n\n//note(@duncanmid): list-menu commands\n\nipcRenderer.on('select-all', (event, message) => {\n\t\n\t$('#' + message + '-list li').addClass('selected')\n\tupdateButtonState()\n})\n\nipcRenderer.on('deselect-all', (event, message) => {\n\t\n\t$('#' + message + '-list li').removeClass('selected')\n\tupdateButtonState()\n})\n\nipcRenderer.on('toggle-selection', (event, message) => {\n\t\n\t$('#' + message + '-list li').toggleClass('selected')\n\tupdateButtonState()\n})\n\nipcRenderer.on('update-lists', () => {\n\t\n\tif( $('#update-all').prop('disabled') ) {\n\t\n\t\tdialog.showErrorBox(\n\t\t\t'No fonts are selected',\n\t\t\t'Select the fonts you would like to activate or disable.'\n\t\t)\n\t\n\t} else {\n\t\n\t\tupdateAll()\n\t}\n})\n\nipcRenderer.on('delete-fonts', () => {\n\n\tvar selected = $('#active-list li.selected, #disabled-list li.selected')\n\t\n\tif( selected.length > 0 ) {\n\t\t\n\t\tvar response = dialog.showMessageBox({\t\n\t\t\t\t\t\tmessage: 'Are you sure you want to delete the selected fonts?',\n\t\t\t\t\t\tdetail: 'This operation is not reversable.',\n\t\t\t\t\t\tbuttons: ['OK','Cancel']\n\t\t\t\t\t})\n\t\t\n\t\tif( response === 0 ) {\n\t\t\n\t\t\tdeleteSelected()\n\t\t}\n\t\n\t} else {\n\t\t\n\t\tdialog.showErrorBox(\n\t\t\t'No fonts are selected',\n\t\t\t'Select fonts from the Active and Disabled lists to delete them from your system.'\n\t\t)\n\t}\n})\n\nipcRenderer.on('delete-single', (event, message) => {\n\t\n\tdeleteItems( message, 0, 1, updateLists );\n})\n\nipcRenderer.on('export-fonts', () => {\n\t\n\tvar selected = $('#active-list li.selected, #disabled-list li.selected')\n\t\n\tif( selected.length > 0 ) {\n\t\t\n\t\texportSelected()\n\t\n\t} else {\n\t\t\n\t\tdialog.showErrorBox(\n\t\t\t'No fonts are selected',\n\t\t\t'Select fonts from the Active and Disabled lists to export them to the Desktop.'\n\t\t)\n\t}\n})\n\nipcRenderer.on('update-path', () => {\n\t\n\t$('#active-list li, #disabled-list li').remove()\n\t$('#update-all').prop('disabled', true)\n\tpopulateFontLists()\n})\n\n\n\n//note(@duncanmid): show / hide bezel\n\nipcRenderer.on('display-bezel', (event, message) => {\n\t\n\t$('#overlay').html(`<div class=\"bezel\"><div class=\"inner\"><img src=\"../assets/svg/loader.svg\" width=\"75\" height=\"75\"><span>installing</span><span>${message}</span></div></div>`).fadeIn('fast')\n})\n\nipcRenderer.on('remove-bezel', (event, message) => {\n\n\tif( message !== 'font-not-installed' ) {\n\t\t\n\t\t$('#active-list li, #disabled-list li').remove()\n\t\t$('#update-all').prop('disabled', true)\n\t\tpopulateFontLists()\n\t\t$('#overlay').fadeOut('fast').empty()\n\t\t\t\n\t\tlet dir = store.get('fontDirectories.activePath')\n\t\t\n\t\tlet fontInstalled = new Notification('Installation Complete', {\n\t\t\tbody: `The font ${message} has been installed to ${dir}`\n\t\t})\n\t\n\t} else {\n\t\t\n\t\t$('#overlay').fadeOut('fast').empty()\n\t}\n})\n"]}