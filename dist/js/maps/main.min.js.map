{"version":3,"sources":["main.js"],"names":["app","BrowserWindow","shell","ipcMain","require","url","path","dialog","Store","fs","win","store","defaults","windowBounds","width","height","x","y","fontDirectories","activePath","getPath","disabledPath","fontPreview","size","color","createWindow","get","saveWindowBounds","set","getBounds","show","titleBarStyle","minWidth","minHeight","backgroundColor","icon","join","__dirname","setSheetOffset","loadURL","format","pathname","protocol","slashes","once","on","quit","exportFonts","fonts","showSaveDialog","defaultPath","buttonLabel","filename","undefined","i","length","copy","err","showErrorBox","code","message","openExternal","currentPath","label","showOpenDialog","properties","webContents","send","event"],"mappings":"AAAA,aAEA,MAAMA,IAACA,IAAGC,cAAEA,cAAaC,MAAEA,MAAKC,QAAEA,SAAWC,QAAQ,YAC/CC,IAAMD,QAAQ,OACdE,KAAOF,QAAQ,QACfG,OAASH,QAAQ,YAAYG,OAC7BC,MAAQJ,QAAQ,kBAChBK,GAAKL,QAAS,YAEpB,IAAIM,IAIAC,MAAQ,IAAIH,OACfI,UAECC,cACCC,MAAO,IACPC,OAAQ,IACRC,EAAG,EACHC,EAAG,GAGJC,iBACCC,WAAYnB,IAAIoB,QAAQ,QAAU,kBAClCC,aAAcrB,IAAIoB,QAAQ,QAAU,4BAGrCE,aACCC,KAAM,GACNC,MAAO,cAOV,SAASC,eAER,IAAIT,EAAEA,EAACC,EAAEA,EAACH,MAAEA,EAAKC,OAAEA,GAAWJ,MAAMe,IAAI,gBAiBxC,SAASC,IACRhB,MAAMiB,IAAI,eAAgBlB,IAAImB,cAhB/BnB,IAAM,IAAIT,eACT6B,MAAM,EACNC,cAAe,SACff,EAAGA,EACHC,EAAGA,EACHH,MAAOA,EACPC,OAAQA,EACRiB,SAAU,IACVC,UAAW,IACXC,gBAAiB,UACjBC,KAAM7B,KAAK8B,KAAKC,UAAW,+BAGxBC,eAAe,IAMnB5B,IAAI6B,QAAQlC,IAAImC,QAEfC,SAAUnC,KAAK8B,KAAKC,UAAW,oBAC/BK,SAAU,QACVC,SAAS,KAGVjC,IAAIkC,KAAK,gBAAiB,KACzBlC,IAAIoB,SAGLpB,IAAImC,GAAG,SAAUlB,GACjBjB,IAAImC,GAAG,OAAQlB,GAEfjB,IAAImC,GAAG,SAAU,KAChB7C,IAAI8C,SAGL1C,QAAQ,kBACRA,QAAQ,oBACRA,QAAQ,mBACRA,QAAQ,sBAkDT,SAAS2C,YAAYC,GAEpBzC,OAAO0C,eAAevC,KAEpBwC,YAAalD,IAAIoB,QAAQ,WAAa,kBACtC+B,YAAa,gBAMf,SAAqBC,GAEpB,QAAkBC,IAAbD,EAEJ,OAIA,IAAI,IAAIE,EAAI,EAAGC,EAASP,EAAMO,OAAQD,EAAIC,EAAQD,IAEjD7C,GAAG+C,KAAMR,EAAMM,GAAG,GAAIF,EAAW,IAAMJ,EAAMM,GAAG,GAAIG,IAE/CA,GAEHlD,OAAOmD,aACN,8CAA+CD,EAAIE,UAzE1D3D,IAAI6C,GAAG,QAASpB,cAIhBzB,IAAI6C,GAAG,cAAgBe,IAEtB1D,MAAM2D,aAAa,UAAYlD,MAAMe,IAAI,mBAAqBkC,MAK/D5D,IAAI6C,GAAG,gBAAkBe,IAExB,IAAIE,EAAcnD,MAAMe,IAAI,mBAAqBkC,GAChDG,EAAQ,SAEO,iBAAZH,IAA6BG,EAAQ,YAEzCxD,OAAOyD,eAAetD,KAEpBwC,YAAaY,EACbX,YAAa,UAAYY,EAAQ,gBACjCE,YAAc,gBACV,kBACA,oBAQN,SAA4Bb,GAEvBA,IAEHzC,MAAMiB,IAAI,mBAAqBgC,EAASR,EAAS,GAAK,KACtD1C,IAAIwD,YAAYC,KAAK,oBAOxBnE,IAAI6C,GAAG,gBAAkBe,IAAcb,aAAca,MACrDzD,QAAQ0C,GAAG,cAAe,CAACuB,EAAOR,KAAcb,YAAaa","file":"../main.min.js","sourcesContent":["'use strict'\n\nconst {app, BrowserWindow, shell, ipcMain} = require('electron')\nconst url = require('url') \nconst path = require('path')\nconst dialog = require('electron').dialog\nconst Store = require('electron-store')\nconst fs = require( 'fs-extra' )\n\nlet win\n\n\n\nlet store = new Store({\n\tdefaults: {\n\t\t\n\t\twindowBounds: {\n\t\t\twidth: 800,\n\t\t\theight: 600,\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\t\n\t\tfontDirectories: {\n\t\t\tactivePath: app.getPath('home') + '/Library/Fonts/',\n\t\t\tdisabledPath: app.getPath('home') + '/Library/Fonts Disabled/'\n\t\t},\n\t\t\n\t\tfontPreview: {\n\t\t\tsize: 26,\n\t\t\tcolor: '#000000'\n\t\t}\n\t}\n})\n\n\n\nfunction createWindow() {\n\t\n\tlet { x, y, width, height } = store.get('windowBounds')\n\t\n\twin = new BrowserWindow({\n\t\tshow: false,\n\t\ttitleBarStyle: 'hidden',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tminWidth: 400,\n\t\tminHeight: 300,\n\t\tbackgroundColor: '#031320',\n\t\ticon: path.join(__dirname, '../assets/icon/Icon.icns')\n\t})\n\t\n\twin.setSheetOffset(24)\n\t\n\tfunction saveWindowBounds() {\n\t\tstore.set('windowBounds', win.getBounds())\n\t}\n\t\n\twin.loadURL(url.format ({ \n\t\t\n\t\tpathname: path.join(__dirname, '../html/app.html'), \n\t\tprotocol: 'file:', \n\t\tslashes: true \n\t}))\n\t\n\twin.once('ready-to-show', () => {\n\t\twin.show()\n\t})\n\t\n\twin.on('resize', saveWindowBounds)\n\twin.on('move', saveWindowBounds)\n\t\n\twin.on('closed', () => {\n\t\tapp.quit();\n\t})\n\t\n\trequire('./app-menu.min')\n\trequire('./list-menus.min')\n\trequire('./font-menu.min')\n\trequire('./install-font.min')\n}\n\napp.on('ready', createWindow) \n\n\n\napp.on('open-folder', (message) => {\n\t\n\tshell.openExternal('file://' + store.get('fontDirectories.' + message ))\n})\n\n\n\napp.on('choose-folder', (message) => {\n\t\n\tlet currentPath = store.get('fontDirectories.' + message ),\n\t\tlabel = 'Active'\n\t\n\tif( message === 'disabledPath' ) label = 'Disabled'\n\t\n\tdialog.showOpenDialog(win, {\n\t\t\t\n\t\t\tdefaultPath: currentPath,\n\t\t\tbuttonLabel: 'Choose ' + label + ' Fonts Folder',\n\t\t\tproperties: [\t'openDirectory',\n\t\t\t\t\t\t\t'showHiddenFiles',\n\t\t\t\t\t\t\t'createDirectory'\n\t\t\t\t\t\t]\n\t\t},\t\t\n\t\t\n\t\tsetFontDirectories\n\t)\n\t\n\t\n\tfunction setFontDirectories(filename) {\n\t\t\n\t\tif( filename ) {\n\t\t\t\n\t\t\tstore.set('fontDirectories.' + message, filename[0] + '/')\n\t\t\twin.webContents.send('update-path')\n\t\t}\n\t}\n})\n\n\n\napp.on('export-single', (message) => { exportFonts( [message] ) })\nipcMain.on('export-list', (event, message) => { exportFonts( message) })\n\nfunction exportFonts(fonts) {\n\t\n\tdialog.showSaveDialog(win, {\n\t\t\t\n\t\t\tdefaultPath: app.getPath('desktop') + '/Exported Fonts',\n\t\t\tbuttonLabel: 'Export Fonts'\n\t\t},\t\t\n\t\t\n\t\texportList\n\t)\n\t\n\tfunction exportList( filename ) {\n\t\t\n\t\tif ( filename === undefined ) {\n\t\t\t\n\t\t\treturn\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tfor(let i = 0, length = fonts.length; i < length; i++ ) {\n\t\t\t\t\n\t\t\t\tfs.copy( fonts[i][1], filename + '/' + fonts[i][0], err => {\n\t\t\t\t\t\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t\t\t'An error occured whilst exporting the fonts', err.code\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\t\n\t\t}\n\t}\n}\n"]}