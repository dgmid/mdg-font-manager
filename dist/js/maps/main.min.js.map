{"version":3,"sources":["main.js"],"names":["app","BrowserWindow","shell","ipcMain","require","url","path","dialog","Store","fs","win","store","defaults","windowBounds","width","height","x","y","fontDirectories","activePath","getPath","disabledPath","fontPreview","size","color","createWindow","get","saveWindowBounds","set","getBounds","show","titleBarStyle","minWidth","minHeight","backgroundColor","icon","join","__dirname","setSheetOffset","loadURL","format","pathname","protocol","slashes","once","on","quit","exportFonts","fonts","showSaveDialog","defaultPath","buttonLabel","filename","undefined","error","i","length","copySync","err","console","log","webContents","send","message","openExternal","currentPath","label","showOpenDialog","properties","event","installPath","location","list","file","split","pop","moveSync","overwrite"],"mappings":"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","file":"../main.min.js","sourcesContent":["'use strict'\n\nconst {app, BrowserWindow, shell, ipcMain} = require('electron')\nconst url = require('url') \nconst path = require('path')\nconst dialog = require('electron').dialog\nconst Store = require('electron-store')\nconst fs = require( 'fs-extra' )\n\nlet win\n\n\n\nlet store = new Store({\n\tdefaults: {\n\t\t\n\t\twindowBounds: {\n\t\t\twidth: 800,\n\t\t\theight: 600,\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\t\n\t\tfontDirectories: {\n\t\t\tactivePath: app.getPath('home') + '/Library/Fonts/',\n\t\t\tdisabledPath: app.getPath('home') + '/Library/Fonts Disabled/'\n\t\t},\n\t\t\n\t\tfontPreview: {\n\t\t\tsize: 8,\n\t\t\tcolor: '#000000'\n\t\t}\n\t}\n})\n\n\n\nfunction createWindow() {\n\t\n\tlet { x, y, width, height } = store.get('windowBounds')\n\t\n\twin = new BrowserWindow({\n\t\tshow: false,\n\t\ttitleBarStyle: 'hidden',\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t\tminWidth: 400,\n\t\tminHeight: 300,\n\t\tbackgroundColor: '#031320',\n\t\ticon: path.join(__dirname, '../assets/icon/Icon.icns')\n\t})\n\t\n\twin.setSheetOffset(24)\n\t\n\tfunction saveWindowBounds() {\n\t\tstore.set('windowBounds', win.getBounds())\n\t}\n\t\n\twin.loadURL(url.format ({ \n\t\t\n\t\tpathname: path.join(__dirname, '../html/app.html'), \n\t\tprotocol: 'file:', \n\t\tslashes: true \n\t}))\n\t\n\twin.once('ready-to-show', () => {\n\t\twin.show()\n\t})\n\t\n\twin.on('resize', saveWindowBounds)\n\twin.on('move', saveWindowBounds)\n\t\n\twin.on('closed', () => {\n\t\tapp.quit();\n\t})\n\t\n\trequire('./app-menu.min')\n\trequire('./list-menus.min')\n\trequire('./font-menu.min')\n\trequire('./glyph-menu.min')\n\trequire('./install-font.min')\n}\n\napp.on('ready', createWindow) \n\n\n\napp.on('open-folder', (message) => {\n\t\n\tshell.openExternal('file://' + store.get('fontDirectories.' + message ))\n})\n\n\n\napp.on('choose-folder', (message) => {\n\t\n\tlet currentPath = store.get('fontDirectories.' + message ),\n\t\tlabel = 'Active'\n\t\n\tif( message === 'disabledPath' ) label = 'Disabled'\n\t\n\tdialog.showOpenDialog(win, {\n\t\t\t\n\t\t\tdefaultPath: currentPath,\n\t\t\tbuttonLabel: 'Choose ' + label + ' Fonts Folder',\n\t\t\tproperties: [\t'openDirectory',\n\t\t\t\t\t\t\t'showHiddenFiles',\n\t\t\t\t\t\t\t'createDirectory'\n\t\t\t\t\t\t]\n\t\t},\t\t\n\t\t\n\t\tsetFontDirectories\n\t)\n\t\n\t\n\tfunction setFontDirectories(filename) {\n\t\t\n\t\tif( filename ) {\n\t\t\t\n\t\t\tstore.set('fontDirectories.' + message, filename[0] + '/')\n\t\t\twin.webContents.send('update-path')\n\t\t}\n\t}\n})\n\n\n\napp.on('export-single', (message) => { exportFonts( [message] ) })\nipcMain.on('export-list', (event, message) => { exportFonts( message) })\n\nfunction exportFonts(fonts) {\n\t\n\tdialog.showSaveDialog(win, {\n\t\t\t\n\t\t\tdefaultPath: app.getPath('desktop') + '/Exported Fonts',\n\t\t\tbuttonLabel: 'Export Fonts'\n\t\t},\t\t\n\t\t\n\t\texportList\n\t)\n\t\n\tfunction exportList( filename ) {\n\t\t\n\t\tif ( filename === undefined ) {\n\t\t\t\n\t\t\treturn\n\t\t\n\t\t} else {\n\t\t\t\n\t\t\tlet error = 0\n\t\t\t\n\t\t\tfor( let i = 0, length = fonts.length; i < length; i++ ) {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tfs.copySync( fonts[i][1], filename + '/' + fonts[i][0] )\n\t\t\t\t\t\n\t\t\t\t} catch (err) {\n\t\t\t\t\t\n\t\t\t\t\terror++\n\t\t\t\t\tconsole.log( err )\t\n\t\t\t\t\n\t\t\t\t} finally {\n\t\t\t\t\t\n\t\t\t\t\tif( i+1 == length ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( error > 1 ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twin.webContents.send('export-failed')\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\twin.webContents.send('export-ok', filename)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t}\n}\n\n\n\nipcMain.on('import', (event, message) => {\n\t\n\tlet installPath = ( message.location == 'left-panel' )? store.get('fontDirectories.activePath') : store.get('fontDirectories.disabledPath')\n\t\n\tlet error = 0\n\t\n\tfor( let i = 0, length = message.list.length; i < length; i++ ) {\n\t\t\n\t\tlet file = message.list[i].split('/').pop()\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tfs.moveSync(message.list[i], installPath + file, { overwrite: true })\n\t\t\n\t\t} catch (err) {\n\t\t\t\n\t\t\terror++\n\t\t\tconsole.log( err )\n\t\t\t\n\t\t} finally {\n\t\t\t\n\t\t\tif( i+1 == length ) {\n\t\t\t\t\n\t\t\t\tif( error > 1 ) {\n\t\t\t\t\t\n\t\t\t\t\twin.webContents.send('import-failed')\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\twin.webContents.send('import-ok', installPath)\n\t\t\t\t}\n\t\t\t}\t\t\t\n\t\t}\n\t}\n})\n\n"]}