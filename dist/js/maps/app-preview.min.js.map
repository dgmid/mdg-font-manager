{"version":3,"sources":["app-preview.js"],"names":["window","$","jQuery","require","fs","ipcRenderer","electron","remote","dialog","path","loadJsonFile","Store","store","fontSizes","injectCSS","family","name","type","url","html","appendTo","listItem","selected","data","font","append","addPreview","fontName","color","get","val","size","hide","result","split","replace","injectGlyphs","set","empty","join","__dirname","then","json","forEach","glyph","entity","e","n","JSON","stringify","x","u","h","styleGlyphs","console","log","css","font-family","font-size","setPrefs","background-color","on","event","message","stat","err","stats","code","showErrorBox","isDirectory","count","readdir","files","file","startsWith","target","item","this","removeClass","toggleClass","fadeOut","promise","done","fadeIn","send","click","addClass","change","parseInt","show","next","document","ready"],"mappings":"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","file":"../app-preview.min.js","sourcesContent":["'use strict'\n\nwindow.$ = window.jQuery = require( 'jquery' )\nconst fs = require( 'fs-extra' )\nconst {ipcRenderer} = require( 'electron' )\nconst electron = require(\"electron\")\nconst remote = electron.remote\nconst dialog = remote.dialog\nconst path = require('path')\nconst loadJsonFile = require('load-json-file')\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\nconst fontSizes = [9,10,11,12,13,14,18,24,36,48,64,72,96,144]\n\n\n\nipcRenderer.on('selected-font', (event, message) => {\n\t\n\tlet name = message[0],\n\t\tpath = message[1]\n\t\n\tfs.stat( path, ( err,stats ) => {\n\t\t\n\t\tif( err ) {\n\n\t\t\tif( err.code ) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\tdialog.showErrorBox(\n\t\t\t\t\t`An error occured whilst previewing the font: ${name}`, err.code\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t\treturn\n\t\t}\n\t\t\n\t\tif( stats.isDirectory() ) {\n\t\t\t\n\t\t\tlet count = 0;\n\t\t\t\n\t\t\tlistItem( 'folder', 'selected', 'show-all', name, fontName( name, 0 ) )\n\t\t\t\n\t\t\tfs.readdir( path, ( err, files ) => {\n\n\t\t\t\tif ( err ) throw  err\n\n\t\t\t\tfor ( let file of files ) {\n\t\t\t\t\n\t\t\t\t\tif( !file.startsWith('.') ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tinjectCSS( fontName( file, 1 ), file, path, 0 )\n\t\t\t\t\t\tlistItem( 'file', '', fontName( file, 1 ), file, fontName( file, 0 ) )\n\t\t\t\t\t\taddPreview( file )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( count == 0 ) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tinjectGlyphs( fontName( file, 1 ), 'letters' )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcount++\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t} else {\n\t\t\t\n\t\t\tinjectCSS( fontName( name, 1 ), name, path, 1 )\n\t\t\tlistItem( 'file', 'selected', fontName( name, 1 ), name, fontName( name, 0 ) )\n\t\t\taddPreview( name )\n\t\t\tinjectGlyphs( name, 'letters' )\n\t\t}\n\t})\n})\n\n\n\nfunction injectCSS( family, name, path, type ) {\n\t\t\n\tlet url\n\t\n\t//note(@duncanmid): 0 = folder, 1 = file\n\t\n\tif( type == 0) {\n\t\t\n\t\turl = `${path}/${name}`\n\t\n\t} else {\n\t\t\n\t\turl = path\n\t}\n\t\n\tlet div = $('<div />', {\n\t\n\t\thtml: `<style>\n\t\t\t\t@font-face {\n\t\t\t\t\tfont-family: \"${family}\";\n\t\t\t\t\tsrc:url(\"file://${url}\");\n\t\t\t\t}\n\t\t\t</style>`\n\t\n\t}).appendTo(\"body\")\n}\n\n\n\nfunction listItem( type, selected, data, name, font ) {\n\t\t\n\t$('#font-list ul').append(\n\t\t\n\t\t`<li class=\"${type} ${selected}\" data-font=\"${data}\" title=\"${name}\">\n\t\t\t<div>${font}</div>\n\t\t</li>`\n\t)\n}\n\n\n\nfunction addPreview( name ) {\n\t\n\tlet font \t= fontName( name, 0 ),\n\t\tfamily \t= fontName( name, 1 ),\n\t\tcolor \t= store.get('fontPreview.color'),\n\t\tval \t= store.get('fontPreview.size'),\n\t\tsize \t= fontSizes[val]\n\t\n\t$('#preview-list').append(\n\t\n\t`<article class=\"preview-item\" data-target=\"${family}\">\n\t\t<h2>${font}</h2>\n\t\t<div class=\"preview-text\" style=\"font-family: \\'${family}\\'; color: ${color}; font-size: ${size}px;\">\n\t\t\t<p>ABCDEFGHIJKLM<br class=\"break\">NOPQRSTUVWXYZ<br>\n\t\t\tabcdefghijklm<br class=\"break\">nopqrstuvwxyz<br>\n\t\t\t1234567890</p>\n\t\t</div>\n\t</article>`\n\t)\n\t\n\tif( val > 8 ) {\n\t\t\n\t\t$('.break').hide()\n\t}\n}\n\n\n\nfunction fontName( name, type ) {\n\t\n\t//note(@duncanmid): 0 = font name, 1 = font-family\n\t\n\tlet font = name.split('.'),\n\t\tresult\n\t\n\tif( type == 0) {\n\t\t\n\t\tresult = font[0].replace( /(-|_)/g, ' ' )\n\t\n\t} else {\n\t\t\n\t\tresult = font[0]\n\t}\n\t\n\treturn result\n}\n\n\n\nfunction injectGlyphs( name, set ) {\n\t\n\t$('#glyph-list').empty()\n\t\n\tloadJsonFile( path.join(__dirname, `../json/${set}-chars.json`) ).then(json => {\n\t\t\n\t\tlet category = 'maths'\n\t\t\n\t\t$('#glyph-list').append(`<div id=\"${category}\"><h2>${category}</h2>`)\n\t\t\n\t\tjson.forEach(function(glyph) {\n\t\t\t\n\t\t\tlet entity = ''\n\t\t\t\n\t\t\tif( glyph.e ) {\n\t\t\t\t\n\t\t\t\tentity = `<tr>\n\t\t\t\t<th>html entity</th>\n\t\t\t\t<td>&amp;${glyph.e}</td>\n\t\t\t</tr>\n\t\t\t`\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$('#glyph-list').append(\n\t\t\t\t\n`<div class=\"glyph\">\n\t<figure class=\"glyph-sample\" title=\"${glyph.n}\" data-glyph='${JSON.stringify(glyph)}'>\n\t\t&${glyph.x}\n\t</figure>\n\t\n\t<table>\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<th>description</th>\n\t\t\t\t<td><span>${glyph.n}</span></td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th>unicode</th>\n\t\t\t\t<td>${glyph.u}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th>hex code</th>\n\t\t\t\t<td>&amp;${glyph.x}</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th>html code</th>\n\t\t\t\t<td>&amp;${glyph.h}</td>\n\t\t\t</tr>\n\t\t\t${entity}\n\t\t</tbody>\n\t</table>\n</div>\n`\n\t\t\t)\n\t\t})\n\t\t\n\t\t$('#glyph-list').append(`</div>`)\n\t\t\n\t\tstyleGlyphs( name )\n\t})\t\n}\n\n\n\nfunction styleGlyphs( name ) {\n\t\n\tconsole.log('name: ' + name)\n\t\n\tlet family \t= fontName( name, 1 ),\n\t\tcolor \t= store.get('fontPreview.color'),\n\t\tsize \t= fontSizes[store.get('fontPreview.size')]\n\t\n\tconsole.log('family: ' + family)\n\t\n\t$('.glyph-sample').css({\t'font-family': family })\n\t$('.glyph-sample').css({\t'font-size': `${size}px`})\n\t$('.glyph-sample').css({\t'color': color })\n}\n\n\n\n$('body').on('click', '#font-list ul li', function(event) {\n\t\n\tlet target,\n\t\titem = $(this).data('font')\n\t\n\tif( item !== 'show-all' ) { styleGlyphs( item ) }\n\t\n\titem == 'show-all' ? target = $('#preview-list article') : target = $(`#preview-list article[data-target=\"${item}\"]`)\n\t\n\t$('#font-list ul li').removeClass('selected')\n\t$(this).toggleClass('selected')\n\t\n\t$('#preview-list article').fadeOut().promise().done( function() {\n\t\t\n\t\ttarget.fadeIn('fast')\n\t})\n})\n\n\n\n$('body').on('mouseup', '.glyph-sample', function() {\n\t\n\tlet glyph = $(this).data('glyph')\n\tipcRenderer.send('show-glyph-menu', glyph )\n})\n\n\n\n$('#show-fonts').click( function() {\n\t\n\t$('#show-glyphs').removeClass('selected')\n\t\n\t$('#glyph-list, #glyph-types').fadeOut().promise().done( function() {\n\t\t\n\t\t$('#show-fonts').addClass('selected')\n\t\t$('#preview-list').fadeIn('fast')\n\t})\n})\n\n\n\n$('#show-glyphs').click( function() {\n\t\n\t$('#show-fonts').removeClass('selected')\n\t\n\t$('#preview-list').fadeOut().promise().done( function() {\n\t\t\n\t\t$('#show-glyphs').addClass('selected')\n\t\t$('#glyph-list, #glyph-types').fadeIn('fast')\n\t})\n})\n\n\n\n$('#font-size').change( function() {\n\t\n\tlet val\t\t= parseInt( $(this).val() ),\n\t\tsize \t= fontSizes[val]\n\t\n\tif( val > 8 ) {\n\t\t\n\t\t$('.break').hide()\n\t\n\t} else {\n\t\t\n\t\t$('.break').show()\n\t}\n\t\n\t$('.preview-text, .glyph-sample').css({'font-size': `${size}px`})\n\t$('#font-size-val').html(size)\n\tstore.set('fontPreview.size', val)\n})\n\n\n\n$('#font-color').change( function() {\n\t\n\tlet val = $(this).val()\n\t\n\t$('.preview-text, .glyph-sample').css({'color': val})\n\t$('#font-color-swatch').css({'background-color': val})\n\tstore.set('fontPreview.color', val)\n})\n\n\n\n$('#glyph-types').change( function() {\n\t\n\tlet name \t= $('#font-list li.selected').data('font'),\n\t\tset \t= $('#glyph-types').val()\n\t\n\tif( name == 'show-all' ) {\n\t\t\n\t\tname = $('#font-list li.selected').next().data('font')\n\t}\n\t\n\tinjectGlyphs( name, set )\n})\n\n\nfunction setPrefs() {\n\t\n\tlet {size, color} = store.get('fontPreview')\n\t\n\t$('#font-size').val(size)\n\t$('#font-size-val').html(fontSizes[size])\n\t$('#font-color').val(color)\n\t$('#font-color-swatch').css({'background-color': color})\n}\n\n\n\n$(document).ready(function() {\n\t\n\tsetPrefs()\t\n})\n"]}