{"version":3,"sources":["list-menus.js"],"names":["electron","require","shell","app","BrowserWindow","Menu","MenuItem","ipc","ipcMain","Store","store","on","event","message","win","fromWebContents","sender","capitalized","charAt","toUpperCase","slice","listMenuTemplate","label","[object Object]","getFocusedWindow","webContents","send","type","checked","get","emit","buildFromTemplate","popup"],"mappings":"AAAA,aAEA,MAAMA,SAAWC,QAAQ,aACnBC,MAACA,MAAKC,IAAEA,KAAOF,QAAS,YACxBG,cAAgBJ,SAASI,cACzBC,KAAOL,SAASK,KAChBC,SAAWN,SAASM,SACpBC,IAAMP,SAASQ,QAEfC,MAAQR,QAAS,kBACjBS,MAAQ,IAAID,MAIlBF,IAAII,GAAG,mBAAoB,CAACC,EAAOC,KAElC,MAAMC,EAAMV,cAAcW,gBAAgBH,EAAMI,QAE7C,IAAIC,EAAcJ,EAAQK,OAAO,GAAGC,cAAgBN,EAAQO,MAAM,GAIjEC,EAAmB,CACtB,CACCC,MAAO,aACPC,QAAUnB,cAAcoB,mBAAmBC,YAAYC,KAAK,aAAcb,KAE3E,CACCS,MAAO,eACPC,QAAUnB,cAAcoB,mBAAmBC,YAAYC,KAAK,eAAgBb,KAE7E,CACCS,MAAO,mBACPC,QAAUnB,cAAcoB,mBAAmBC,YAAYC,KAAK,mBAAoBb,KAEjF,CACCc,KAAM,aAEP,CACCL,eAAgBL,cAChBU,KAAM,WACNC,QAtB8C,GAAvClB,MAAMmB,iBAAkBhB,KAuB/BU,QAAUnB,cAAcoB,mBAAmBC,YAAYC,KAAK,UAAW,CAACb,EAAS,MAElF,CACCS,eAAgBL,cAChBU,KAAM,WACNC,QA3B8C,GAAvClB,MAAMmB,iBAAkBhB,KA4B/BU,QAAUnB,cAAcoB,mBAAmBC,YAAYC,KAAK,UAAW,CAACb,EAAS,MAElF,CACCc,KAAM,aAEP,CACCL,cAAeL,2BACfM,QAAUpB,IAAI2B,KAAK,cAAejB,KAEnC,CACCS,gBAAiBL,kBACjBM,QAAUpB,IAAI2B,KAAK,gBAAiBjB,MAIrBR,KAAK0B,kBAAkBV,GAE/BW,MAAMlB","file":"../list-menus.min.js","sourcesContent":["'use strict'\n\nconst electron = require('electron')\nconst {shell, app} = require( 'electron' )\nconst BrowserWindow = electron.BrowserWindow\nconst Menu = electron.Menu\nconst MenuItem = electron.MenuItem\nconst ipc = electron.ipcMain\n\nconst Store = require( 'electron-store' )\nconst store = new Store()\n\n\n\nipc.on('show-folder-menu', (event, message) => {\n\n\tconst win = BrowserWindow.fromWebContents(event.sender)\n\t\n    let capitalized = message.charAt(0).toUpperCase() + message.slice(1),\n\t\ta_z = ( store.get( `fontOrder.${message}` ) == 0 ) ? true : false,\n\t\tz_a = ( store.get( `fontOrder.${message}` ) == 0 ) ? false : true\n\t\n\tlet listMenuTemplate = [\n\t\t{\n\t\t\tlabel: 'Select All',\n\t\t\tclick() { BrowserWindow.getFocusedWindow().webContents.send('select-all', message) }\n\t\t},\n\t\t{\n\t\t\tlabel: 'Deselect All',\n\t\t\tclick() { BrowserWindow.getFocusedWindow().webContents.send('deselect-all', message) }\n\t\t},\n\t\t{\n\t\t\tlabel: 'Toggle Selection',\n\t\t\tclick() { BrowserWindow.getFocusedWindow().webContents.send('toggle-selection', message) }\n\t\t},\n\t\t{\n\t\t\ttype: 'separator'\n\t\t},\n\t\t{\n\t\t\tlabel: `Order ${capitalized} Fonts A–Z`,\n\t\t\ttype: 'checkbox',\n\t\t\tchecked: a_z,\n\t\t\tclick() { BrowserWindow.getFocusedWindow().webContents.send('reorder', [message, 1]) }\n\t\t},\n\t\t{\n\t\t\tlabel: `Order ${capitalized} Fonts Z–A`,\n\t\t\ttype: 'checkbox',\n\t\t\tchecked: z_a,\n\t\t\tclick() { BrowserWindow.getFocusedWindow().webContents.send('reorder', [message, 0]) }\n\t\t},\n\t\t{\n\t\t\ttype: 'separator'\n\t\t},\n\t\t{\n\t\t\tlabel: `Show ${capitalized} Fonts Folder in Finder`,\n\t\t\tclick() { app.emit('open-folder', message) }\n\t\t},\n\t\t{\n\t\t\tlabel: `Choose ${capitalized} Fonts Folder…`,\n\t\t\tclick() { app.emit('choose-folder', message) }\n\t\t}\n\t]\n\t\n\tconst listMenu = Menu.buildFromTemplate(listMenuTemplate)\n\t\t\t\n\tlistMenu.popup(win)\n})\n"]}